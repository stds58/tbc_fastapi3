# метод для создания JWT access_token
# метод для трансформации пароля в hash строку
# метод для проверки соответствия пароля и hash-строки
# метод который будет принимать Email (логин) и пароль от пользователя. Суть в том чтоб выполнить аутинтефикацию.
# Необходимо установить следующие библиотеки:
# pip install python-jose
# pip install bcrypt
# pip install python-jose bcrypt==4.0.1 passlib[bcrypt]  # Важно, чтоб версия bcrypt была именно 4.0.1

python-jose:
Это библиотека для работы с JSON Web Tokens (JWT). Она поддерживает различные алгоритмы шифрования и подписания для создания и проверки JWT.
Используется для генерации, подписания и верификации токенов, которые часто используются для аутентификации и передачи информации между клиентом и сервером.

bcrypt==4.0.1:
Это библиотека для хэширования паролей с использованием алгоритма bcrypt.
Важно установить именно версию 4.0.1, чтобы избежать возможных несовместимостей или изменений в API в других версиях.
bcrypt считается одним из наиболее безопасных методов хэширования паролей благодаря использованию соли и многократного хэширования.

passlib[bcrypt]:
Это универсальная библиотека для хэширования паролей, которая поддерживает различные алгоритмы хэширования, включая bcrypt.
Passlib упрощает работу с хэшированием паролей, предоставляя удобные функции для создания и проверки хэшей.
Использование passlib[bcrypt] означает, что вы устанавливаете Passlib с поддержкой алгоритма bcrypt, обеспечивая дополнительную гибкость и функциональность.



В серьезных приложениях для того чтоб пользователя не выкидывало из системы реализуется функционал refresh_token.
Если коротко, то refresh_token позволяет автоматически обновить срок жизни токена,
тем самым, не заставляя пользователя повторно входить в систему.

#######################################################################

https://habr.com/ru/companies/alfastrah/articles/651861/
Прикручиваем авторизацию на основе KeyCloak к веб-приложению

https://habr.com/ru/articles/591985/
Авторизация для бедных или как сделать RBAC для REST API с помощью OPA

https://www.openpolicyagent.org
В качестве модуля авторизации я буду использовать OPA





